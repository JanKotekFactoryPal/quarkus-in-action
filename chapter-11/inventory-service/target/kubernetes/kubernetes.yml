---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: default
spec:
  clusterIP: None
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/commit-id: 8f4d14db3271b54ab40c1d61598c32907d8890ac
    app.quarkus.io/build-timestamp: 2024-01-12 - 09:55:39 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8083"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: inventory-service
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: quarkus
  name: inventory-service
  namespace: default
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8083
    - name: grpc
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app.kubernetes.io/name: inventory-service
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: default
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
      namespace: default
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: quarkus
            - name: MYSQL_USER
              value: quarkus
            - name: MYSQL_PASSWORD
              value: quarkus
            - name: MYSQL_ROOT_PASSWORD
              value: admin
          image: mysql:8.0
          name: mysql
          ports:
            - containerPort: 3306
              name: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/commit-id: 8f4d14db3271b54ab40c1d61598c32907d8890ac
    app.quarkus.io/build-timestamp: 2024-01-12 - 09:55:39 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8083"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/name: inventory-service
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  name: inventory-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: inventory-service
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      annotations:
        app.quarkus.io/commit-id: 8f4d14db3271b54ab40c1d61598c32907d8890ac
        app.quarkus.io/build-timestamp: 2024-01-12 - 09:55:39 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8083"
        prometheus.io/scheme: http
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: inventory-service
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: jdbc:mysql://mysql:3306/quarkus
          image: quay.io/quarkus-in-action/inventory-service:1.0.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8083
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: inventory-service
          ports:
            - containerPort: 8083
              name: http
              protocol: TCP
            - containerPort: 9000
              name: grpc
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8083
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8083
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
